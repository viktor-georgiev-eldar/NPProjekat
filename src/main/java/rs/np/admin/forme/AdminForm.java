/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.np.admin.forme;

import rs.np.admin.forme.artikal.CRUDArtikalaForma;
import rs.np.admin.forme.artikal.PrikazArtikalaForm;
import rs.np.admin.forme.korisnik.CRUDKorisnikaForma;
import rs.np.admin.forme.korisnik.PrikazKorisnikaForm;
import rs.np.controller.ControllerAdministrator;
import domenskiObjekti.Korisnik;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import javax.swing.JOptionPane;
import rs.np.admin.niti.OsluskivanjeKlijenata;
import domenskiObjekti.Artikal;
import domenskiObjekti.Racun;
import domenskiObjekti.StavkaRacuna;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import rs.np.tableModel.TableModelRacuni;

/**
 *
 * @author Viktor
 */
public class AdminForm extends javax.swing.JFrame {

    /**
     * Creates new form AdminForm
     */
    private OsluskivanjeKlijenata ok;
    private Korisnik korisnik;
    TableModelRacuni tblModel;
    public AdminForm() {
        initComponents();
        postaviTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPokretanjeServera = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblStatusServera = new javax.swing.JLabel();
        btnOsveziRacune = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRacuni = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administratorska Forma");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnPokretanjeServera.setText("Pokreni server");
        btnPokretanjeServera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPokretanjeServeraActionPerformed(evt);
            }
        });

        jLabel1.setText("Status servera: ");

        lblStatusServera.setText("Ugasen");

        btnOsveziRacune.setText("Osvezi racune");
        btnOsveziRacune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsveziRacuneActionPerformed(evt);
            }
        });

        tblRacuni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRacuni);

        jMenu1.setText("Korisnik");

        jMenuItem1.setText("Dodaj");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Izmeni");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Artikal");

        jMenuItem3.setText("Dodaj");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Izmeni");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblStatusServera)
                        .addGap(55, 55, 55)
                        .addComponent(btnPokretanjeServera))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnOsveziRacune))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPokretanjeServera)
                    .addComponent(jLabel1)
                    .addComponent(lblStatusServera))
                .addGap(30, 30, 30)
                .addComponent(btnOsveziRacune)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new CRUDKorisnikaForma(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new PrikazKorisnikaForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnPokretanjeServeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPokretanjeServeraActionPerformed
        if (btnPokretanjeServera.getText().equalsIgnoreCase("Pokreni server")) {
            ok = new OsluskivanjeKlijenata(this);
            ok.start();
        } else {
            boolean znak = ControllerAdministrator.getInstance().izlogujKorisnike();
            if (znak) {
                ok.zaustaviServer();
                ok = null;
            }
        }
    }//GEN-LAST:event_btnPokretanjeServeraActionPerformed

    //podesavamo status korisnika na izlogovan u bazi podataka
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        boolean rez = ControllerAdministrator.getInstance().izlogujKorisnika(korisnik.getUsername());
        if (rez == false) {
            JOptionPane.showConfirmDialog(this, "IMAMO PROBLEM");
        }
        if (lblStatusServera.getText().equals("radi")) {
            ok.zaustaviServer();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new CRUDArtikalaForma(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        new PrikazArtikalaForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void btnOsveziRacuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsveziRacuneActionPerformed
        postaviTabelu();
        /*List<Racun> listaRacuna= ControllerAdministrator.getInstance().vratiListuRacuna();
        for (Racun r: listaRacuna){
            System.out.println("ID: "+r.getRacunId());
            System.out.println("Ukupno: "+r.getUkupno());
            System.out.println("Datum: "+r.getDatum());
            System.out.println("STAVKE");
            for(StavkaRacuna sr: r.getListaStavki()){
                System.out.println("\tArtikal ID: "+sr.getArtikal().getArtikalId());
                System.out.println("\tNaziv: "+sr.getArtikal().getNaziv());
                System.out.println("\tCena: "+sr.getArtikal().getCena());
                System.out.println("\tKolicina: "+sr.getKolicina());
                System.out.println();
            }
            System.out.println("---------------------------");
        }*/
    }//GEN-LAST:event_btnOsveziRacuneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOsveziRacune;
    private javax.swing.JButton btnPokretanjeServera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatusServera;
    private javax.swing.JTable tblRacuni;
    // End of variables declaration//GEN-END:variables

    private void postaviTabelu(){
        tblModel=new TableModelRacuni();
        tblRacuni.setModel(tblModel);
        resizeColumnWidth(tblRacuni);
        tblRacuni.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                Point p = e.getPoint();
                int row = tblRacuni.rowAtPoint(p);
                int col = tblRacuni.columnAtPoint(p);
                //Proveriti zasto listaRacuna u tblModelu nema racune koji se unesu u runtimu
                String stavke= tblModel.vratiStavke(row,col);
                if (stavke!=""){
                    tblRacuni.setToolTipText(stavke);
                }                        
            }           
        });
        
    }

    public void resizeColumnWidth(JTable table) {
    final TableColumnModel columnModel = table.getColumnModel();
    for (int column = 0; column < table.getColumnCount(); column++) {
        int width = 15; // Min width
        for (int row = 0; row < table.getRowCount(); row++) {
            TableCellRenderer renderer = table.getCellRenderer(row, column);
            Component comp = table.prepareRenderer(renderer, row, column);
            width = Math.max(comp.getPreferredSize().width +1 , width);
        }
        if(width > 300)
            width=300;
        columnModel.getColumn(column).setPreferredWidth(width);
    }
}
    public void serverPokrenut() {
        btnPokretanjeServera.setText("Zaustavi server");
        lblStatusServera.setText("radi");
    }

    public void serverZaustavljen() {
        btnPokretanjeServera.setText("Pokreni server");
        lblStatusServera.setText("ugasen");
    }

    public void setKorisnik(Korisnik korisnik) {
        this.korisnik = korisnik;
    }

}
